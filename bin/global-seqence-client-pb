#!/usr/bin/evn python3

import logging
import argparse
from concurrent import futures

import grpc

from gs.seqenceserver import SeqenceDaemo
from gs.pb.seqence_pb2 import SeqenceID,Request
from gs.pb.seqence_pb2_grpc import SeqenceServicer,SeqenceStub,add_SeqenceServicer_to_server

logging.basicConfig(format="%(asctime)s - %(name)s - %(threadName)s - %(levelname)s - %(message)s",level=logging.INFO)

name = "global-seqence-client-pb"

def parser_args():
    """
    """
    parser = argparse.ArgumentParser(f'global-seqence-server-pb')
    parser.add_argument('--host',type=str,default="127.0.0.1",help="服务端地址")
    parser.add_argument('--port',type=int,default=8888,help="服务端监听的端口")
    return parser.parse_args()

def main():
    args = parser_args()
    logging.info(f"connection {args.host}:{args.port}")
    with grpc.insecure_channel(f"{args.host}:{args.port}") as channel:
        stub = SeqenceStub(channel)
        id = stub.get_id(Request(client_name="gsc"))
        logging.info(f"we got {str(id).strip()} from server .")

if __name__ == "__main__":
    main()