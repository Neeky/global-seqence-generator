#!/usr/bin/env python3
#!/usr/bin/evn python3

import logging
import argparse
from concurrent import futures

import grpc

from gs.seqenceserver import SeqenceDaemo
from gs.pb.seqence_pb2 import SeqenceID,Request
from gs.pb.seqence_pb2_grpc import SeqenceServicer,SeqenceStub,add_SeqenceServicer_to_server

logging.basicConfig(format="%(asctime)s - %(name)s - %(threadName)s - %(levelname)s - %(message)s",level=logging.INFO)

name = "global-seqence-server-pb"

def parser_args():
    """
    """
    parser = argparse.ArgumentParser(f'global-seqence-server-pb')
    parser.add_argument('--port',type=int,default=8888,help="服务端监听的端口")
    return parser.parse_args()

def main():
    args = parser_args()
    try:
        server = grpc.server(futures.ThreadPoolExecutor(max_workers=10))
        add_SeqenceServicer_to_server(SeqenceDaemo(),server)
        server.add_insecure_port(f"[::]:{args.port}")
        server.start()
        server.wait_for_termination()
    except Exception as err:
        logging.error(f"{str(err)} .")
    finally:
        pass

if __name__ == "__main__":
    main()
